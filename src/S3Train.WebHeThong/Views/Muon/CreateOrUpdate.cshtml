@using S3Train.WebHeThong.Models
@model MuonTraViewModel

@{
    ViewBag.Title = "CreateOrUpdate";
    Layout = "~/Views/Shared/_LayoutAdminPage.cshtml";
    string title = string.IsNullOrEmpty(Model.Id) ? "Tạo Mới" : "Cập Nhật";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">@title Phiếu Mượn</h1>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","Muon")">Muon</a></li>
        <li class="breadcrumb-item active" aria-current="page">Tao-Moi</li>
    </ol>
</div><div class="card">
    <div class="card-body" id="myForm">
        @Html.AntiForgeryToken()
        <div class="form-group row">
            <div class="col-md-6">

                <label>@Html.DisplayNameFor(item => Model.UserId)</label>
                @Html.EditorFor(model => Model.UserId, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                @Html.ValidationMessageFor(model => Model.UserId, "", new { @class = "text-danger" })
                <input type="hidden" id="UserId">

            </div>
            <div class="col-md-6">
                <label>@Html.DisplayNameFor(item => Model.ThuMuon)</label>
                @Html.EditorFor(model => Model.ThuMuon, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                @Html.ValidationMessageFor(model => Model.ThuMuon, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-6">
                <label>@Html.DisplayNameFor(item => Model.NgayMuon)</label>
                @Html.EditorFor(model => model.NgayMuon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NgayMuon, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label>@Html.DisplayNameFor(item => Model.NgayTra)</label>
                @Html.EditorFor(model => model.NgayTra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NgayTra, "", new { @class = "text-danger" })


            </div>
        </div>
        <button style="display:none" data-pro-id="" class="btn btn-danger" id="delete" onclick="return confirm(" Bạn Có Chắc Muốn Xóa Phiếu Mượn Này?");" title="Xóa"><i class="fas fa-trash"></i></button>
        <div class="form-group">
            <input id="b" type="submit" value="Submit" class="btn btn-success" />

        </div>
        <table class="table table-responsive-lg" id="table" style="display:none">
            <tr>
                <th width="300">Tên</th>
                <th width="200">Vị Trí Lưu Trữ</th>
                <th width="150">Tình Trạng</th>
                <th width="150">Hoạt Động</th>

            </tr>
            <tbody></tbody>
        </table>

    </div>
    
</div>


@section scripts{
      <div>
          <script>
        $(function () {
            var successMessage = '@TempData["AlertMessage"]'
            if (successMessage != '')
                alertify.success(successMessage);
        });



        $(document).ready(function () {
            $("#ThuMuon").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Muon/AutoCompleteText",
                        data: "{ 'pre':'" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    Text: item.Text,
                                    Id: item.Id,
                                    TinhTrang: item.TinhTrang,
                                    ViTri: item.ViTri,
                                    json: item
                                }
                            }))
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert(textStatus);
                        }
                    });
                },
                select: function (event, ui) {
                    $("#ThuMuon").val(ui.item.Text);
                    var markup = "<tr>";
                    markup += '<td class="name"> ' + ui.item.Text + "</td>" + "<td> " + ui.item.ViTri + "</td>" + "<td>" + ui.item.TinhTrang + "</td>";
                    markup += '<td> <button class="btn btn-danger delete"  value = "ui.item.Text"  onclick="return confirm("Bạn Có Chắc Muốn Xóa Phiếu Mượn Này?");" title="Xóa"><i class="fas fa-trash"></i></button>';
                    markup += '</tr>';
                    $("table").append(markup);
                    $("#table").show();

                    return false;
                },
            }).data("ui-autocomplete")._renderItem = function (ul, item) {
                var str = '<table style="width:100%;">';
                str += '<tr>';
                str += '<th width="400"></th>'
                str += '<th ></th>'
                str += '</tr>';
                str += '<tbody>';
                str += '<tr>';
                str += "<td>" + item.Text + "</td>" + "<td>" + item.TinhTrang + "</td>"
                str += '</tr>';
                str += '</tbody>';
                str += '</table>';

                return $("<table>")
                    .append(str)
                    .appendTo(ul);
                };
        });


        $(document).ready(function () {
            $("#UserId").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Muon/AutoCompleteTextUser",
                        data: "{ 'user':'" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    Text: item.Text,
                                    Id: item.Id,
                                    SoLuongMuon: item.SoLuongMuon,
                                    json: item
                                }
                            }))
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert(textStatus);
                        }
                    });
                },
                select: function (event, ui) {
                    $("#UserId").val(ui.item.Text);
                    if (ui.item.SoLuongMuon >= 3) {
                        alert("Đã mượn tối đa 3 TLVB, vui lòng trả rồi mượn tiếp!");
                        window.location.href = "http://localhost:19873/Muon/Index";
                    }
                       
                    return false;
                },
            }).data("ui-autocomplete")._renderItem = function (ul, item) {
                var str = '<table style="width:100%;">';
                str += '<tr>';
                str += '<th width="400">Tên</th>'
                str += '<th >Số Lượng Đang Mượn</th>'
                str += '</tr>';
                str += '<tbody>';
                str += '<tr>';
                str += "<td>" + item.Text + "</td>" + "<td>" + item.SoLuongMuon + "</td>"
                str += '</tr>';
                str += '</tbody>';
                str += '</table>';

                return $("<table>")
                    .append(str)
                    .appendTo(ul);
            };
        });

            $('input').blur( function (e) {
                var userId = $('#UserId').val();
                var today = new Date();
                var day = today.getDate();
                var month = (today.getMonth() + 1);
                var year = today.getFullYear();
                var a = [];
                $.ajax({
                    type: 'GET',
                    url: "/Muon/KiemTraHanTra",
                    data: {
                        user: userId
                    },
                    success: function (data) {
                        for (i = 0; i < data.d.length; i++) {
                            var dt = new Date(parseInt(data.d[i].NgayTra.replace('/Date(', '')))
                            var dtFinal = AddLeadingZeros(dt.getFullYear(), 4) + '/' +
                                AddLeadingZeros(dt.getMonth() + 1, 2) + '/' +
                                AddLeadingZeros(dt.getDate(), 2)
                            var d = AddLeadingZeros(dt.getDate(), 2);
                            var m = AddLeadingZeros(dt.getMonth() + 1, 2);
                            var y = AddLeadingZeros(dt.getFullYear(), 4);
                            var da = d.replace(/^0+/, '');
                            var mo = m.replace(/^0+/, '');
                            if ((da <= day && mo <= month && y <= year) || (da >= day && mo < month && y <= year) || y < year) {
                                 alert("Bạn chưa trả TL/VB theo hạn trả, vui lòng trả rồi mượn tiếp");
                                window.location.href = "http://localhost:19873/Muon/Index";
                            }
                               
                        }
                    },
                });
            });

        function AddLeadingZeros(number, size) {
            var s = "0000" + number;
            return s.substr(s.length - size);
        }

        var arrayMuon = [];
        var pval = "";
        $("#ThuMuon").change(function () {

            var inputText = $("#ThuMuon").val();
            if (inputText.length > 1) {
                arrayMuon.push(inputText);
                var pval = "";
                for (i = 0; i < arrayMuon.length; i++) {
                    pval = pval + arrayMuon[i] + "<br/>";
                }
            }
        });

            $(document).on("click", '.delete', function () {
                var arrayText = [];
                var _tr = $(this).closest('tr');
                var text = $(_tr).find('.name').text();
                var name = text.trim();
                var a = jQuery.extend(true, [], arrayText);
                var b = jQuery.extend(true, [], arrayMuon);
                for (i = 0; i < b.length; i++) {
                    if (name == arrayMuon[i])
                        arrayMuon.splice(i, 1);
                }
                $(this).parent().parent('tr').remove();

            });

       

        $("#b").click(function () {
            var token = $('input[name="__RequestVerificationToken"]').val();
            var user = $('#UserId').val();
            var ngayKT = $('#NgayTra').val();
            if (arrayMuon.length > 3)
                alert("Bạn chỉ mượn tối đa được 3 TL/VB");
            else {
                $.ajax({
                    type: "POST",
                    url: '/Muon/CreateOrUpdate',
                    data: {
                        userId: user,
                        array: arrayMuon,
                        ngayTra: ngayKT,
                        __RequestVerificationToken: token
                    },
                    success: function (data) {
                        window.location.href = "http://localhost:19873/Muon/Index";
                        TempData["AlertMessage"] = "Tạo Mới Thành Công";
                    }

                });
            }
            
        });

   </script>
      </div>

}


