@using S3Train.WebHeThong.Models
@model TuViewModel
@{
    ViewBag.Title = "CreateOrUpdate";
    Layout = "~/Views/Shared/_LayoutAdminPage.cshtml";
}

<div class="card">
    <div class="card-body" id="myForm">
        @using (Html.BeginForm("CreateOrUpdate", "Tu", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group row">
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.Ten)</label>
                    @Html.EditorFor(model => model.Ten, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tủ Lưu Trữ Số 1" } })
                    @Html.ValidationMessageFor(model => model.Ten, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.ViTri)</label>
                    @Html.EditorFor(model => model.ViTri, new { htmlAttributes = new { @class = "form-control", @placeholder = "7/6/2 Đường Linh Đông/Phường Linh Dông/Quận Thủ Đức" } })
                    @Html.ValidationMessageFor(model => model.ViTri, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.DienTich)</label>
                    @Html.EditorFor(model => model.DienTich, new { htmlAttributes = new { @class = "form-control", @placeholder = "100m2" } })
                    @Html.ValidationMessageFor(model => model.DienTich, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.NgươiQuanLy)</label>
                    @Html.EditorFor(model => model.NgươiQuanLy, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nguyễn Văn A" } })
                    @Html.ValidationMessageFor(model => model.NgươiQuanLy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-2">
                    <div class="row-cols-1 form-group">
                        <label>@Html.DisplayNameFor(item => Model.DonViTinh)</label>
                        @Html.EditorFor(model => model.DonViTinh, new { htmlAttributes = new { @class = "form-control", @placeholder = "Kệ" } })
                        @Html.ValidationMessageFor(model => model.DonViTinh, "", new { @class = "text-danger" })
                    </div>
                    <div class="row-cols-1 form-group">
                        <label>@Html.DisplayNameFor(item => Model.SoLuongMax)</label>
                        @Html.EditorFor(model => model.SoLuongMax, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                        @Html.ValidationMessageFor(model => model.SoLuongMax, "", new { @class = "text-danger" })
                    </div>

                    <div class="row-cols-1 form-group">
                        <label>@Html.DisplayNameFor(item => Model.SoLuongHienTai)</label>
                        @Html.EditorFor(model => model.SoLuongHienTai, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                        @Html.ValidationMessageFor(model => model.SoLuongHienTai, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-10">
                    <label>@Html.DisplayNameFor(item => Model.TinhTrang)</label>
                    @Html.TextAreaFor(model => model.TinhTrang, new { @class = "form-control", placeholder = "Điều kiện hiện tại của kho", rows = "9" })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-success"/>
            </div>
        }
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function () {
            $("#SoLuongHienTai").on("change", function () {
                var max = parseInt($("#SoLuongMax").val());
                var ht = parseInt($(this).val());
                if (ht > max) {
                    alert("Số lượng hiện tại không được lớn hơn sức chứa");
                    $(this).addClass("is-invalid");
                }
                else {
                    $(this).addClass("is-valid");
                    $(this).removeClass("is-invalid");
                }
            });

            $("#SoLuongMax").on("change", function () {
                var max = parseInt($("#SoLuongMax").val());
                if (max <= 0) {
                    alert("Sức Chứa Phải Lớn Hơn 0");
                    $(this).addClass("is-invalid");
                }
                else {
                    $(this).addClass("is-valid");
                    $(this).removeClass("is-invalid");
                }
            });
         });
    </script>
}
