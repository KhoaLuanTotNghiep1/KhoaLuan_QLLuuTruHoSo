@using S3Train.WebHeThong.Models
@model TaiLieu_VanBanViewModel

@{
    ViewBag.Title = "CreateOrUpdate";
    Layout = "~/Views/Shared/_LayoutAdminPage.cshtml";
}

<div class="card">
    <div class="card-body" id="myForm">
        @using (Html.BeginForm("CreateOrUpdate", "TaiLieuVanBan", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.Dang)
            <div class="form-group row">
                <div class="col-md">
                    <label>@Html.DisplayNameFor(item => Model.Ten)</label>
                    @Html.EditorFor(model => model.Ten, new { htmlAttributes = new { @class = "form-control", @placeholder = "Thông Báo Đóng Học Phí Học Kỳ 2 Năm 2019-2020" } })
                    @Html.ValidationMessageFor(model => model.Ten, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md">
                    <label>@Html.DisplayNameFor(item => Model.NoiBanHanhId)</label>
                    @Html.DropDownListFor(m => m.NoiBanHanhId, new SelectList(ViewBag.NoiBanHanhs, "value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NoiBanHanhId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-3">
                    <label>@Html.DisplayNameFor(item => Model.Loai)</label>
                    @Html.DropDownListFor(m => m.Loai, new SelectList(ViewBag.LoaiHoSos, "Text", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Loai, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label>@Html.DisplayNameFor(item => Model.NgayBanHanh)</label>
                    @Html.EditorFor(model => model.NgayBanHanh, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NgayBanHanh, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    <label>@Html.DisplayNameFor(item => Model.SoKyHieu)</label>
                    @Html.EditorFor(model => model.SoKyHieu, new { htmlAttributes = new { @class = "form-control", @placeholder = "1052/TB-DCT" } })
                    @Html.ValidationMessageFor(model => model.SoKyHieu, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <label>@Html.DisplayNameFor(item => Model.SoTo)</label>
                    @Html.EditorFor(model => model.SoTo, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                    @Html.ValidationMessageFor(model => model.SoTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.NguoiKy)</label>
                    @Html.EditorFor(model => model.NguoiKy, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nguyễn Văn A" } })
                    @Html.ValidationMessageFor(model => model.NguoiKy, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.NguoiDuyet)</label>
                    @Html.EditorFor(model => model.NguoiDuyet, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nguyễn Văn B" } })
                    @Html.ValidationMessageFor(model => model.NguoiDuyet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    <label>Người Nhận</label>
                    @Html.EditorFor(model => model.NguoiGuiHoacNhan, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                    @Html.ValidationMessageFor(model => model.NguoiGuiHoacNhan, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>File Đính Kèm</label>
                    <input type="file" class="form-control" name="file" />
                    <span class="small">Có thể có hoặc không</span>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.GhiChu)</label>
                    @Html.TextAreaFor(model => model.GhiChu, new { @class = "form-control", rows = "5" })
                    <script type="text/javascript">CKEDITOR.replace("GhiChu", { htmlEncodeOutput: true });</script>
                </div>
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.TrichYeu)</label>
                    @Html.TextAreaFor(model => model.TrichYeu, new { @class = "form-control", rows = "5" })
                    <script type="text/javascript">CKEDITOR.replace("TrichYeu", { htmlEncodeOutput: true });</script>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md">
                    <label>@Html.DisplayNameFor(item => Model.NoiDung)</label>
                    @Html.TextAreaFor(model => model.NoiDung, new { @class = "form-control", rows = "5" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md">
                    <label>Hồ Sơ Lưu Trữ</label>
                    @Html.EditorFor(model => model.HoSoId, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                    <i><span>Lưu ý: phải nhập đúng với kết quả được gợi ý</span></i>
                    @Html.ValidationMessageFor(model => model.HoSoId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md">
                    <i><span id="viTri"></span></i>
                    <input id="Button1" class="btn btn-primary col-md-auto" type="button" value="Gợi ý vị trí lưu" />
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-success" />
            </div>
        }
    </div>
</div>

@section  scripts{
    <script>
        $(document).ready(function () {

            $('#Button1').click(function (e) {
                e.preventDefault();
                var noiDung = $("#NoiDung").val();
                if (noiDung.length == 0) {
                    alert("Muốn sử dụng chức năng gợi ý nơi lưu trữ thì nội dung không được để trống?")
                } else {
                    $.ajax({
                        url: "/TaiLieuVanBan/StorageSuggestion",
                        type: 'GET',
                        data: {
                            document: noiDung
                        },
                        success: function (data) {
                            console.log(data);
                            var vt = "Vị trí lưu trữ gợi ý: " + data.da;
                            $("#viTri").text(vt);
                            $("#Button1").hide();
                        },
                        error: function () {
                            alert("Lưu trữ tùy ý vì không có tài liệu / văn bản có nội dung tương tự");
                        }
                    });
                }
            });

            $("#HoSoId").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/TaiLieuVanBan/AutoCompleteText",
                        type: "POST",
                        dataType: "json",
                        data: { text: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Text, value: item.Text};
                            }))

                        }
                    })
                }
            });
        });
    </script>
}